File Name: Lab01-01.exe
File Type: PE32

1-> Upload the files to http://www.VirusTotal.com/ and view the reports. Does either file match any existing antivirus signatures?

- 51/72 Detection rate


2-> When were these files compiled?

- Time Date Stamp: Sunday, 19.12.2010 16:16:19 UTC


3-> Are there any indications that either of these files is packed or obfuscated? If so, what are these indicators?

- No, there’s no indicators these files are packed or obfuscated due to the following:
     Using PEiD we can identify them as being compiled with Microsoft Visual C++ 6.0


4-> Do any imports hint at what this malware does? If so, which imports are they?

- CloseHandle = Closes an open object handle.

- UnmapViewOfFile = Unmaps a mapped view of a file from the calling process's address space.

- IsBadReadPtr = Verifies that the calling process has read access to the specified range of memory.

* Important  This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use. For more information, see Remarks on this page.

- MapViewOfFile = Maps a view of a file mapping into the address space of a calling process.

- CreateFileMappingA = Creates or opens a named or unnamed file mapping object for a specified file.

- CreateFileA = Creates or opens a file or I/O device. The most commonly used I/O devices are as follows: file, file stream, directory, physical disk, volume, console buffer, tape drive, communications resource, mailslot, and pipe. The function returns a handle that can be used to access the file or device for various types of I/O depending on the file or device and the flags and attributes specified

- FindClose = Closes a file search handle opened by the FindFirstFile, FindFirstFileEx, FindFirstFileNameW, FindFirstFileNameTransactedW, FindFirstFileTransacted, FindFirstStreamTransactedW, or FindFirstStreamW functions.

- FindNextFileA = Continues a file search from a previous call to the FindFirstFile, FindFirstFileEx, or FindFirstFileTransacted functions.

- FindFirstFileA = Searches a directory for a file or subdirectory with a name that matches a specific name (or partial name if wildcards are used).

- CopyFileA = Copies an existing file to a new file.


5-> Are there any other files or host-based indicators that you could look for on infected systems?

 - Examining the strings contained within Lab01-01.exe more closely reveals that it is referencing a file called
    C:\windows\system32\kerne132.dll. This is a very subtle misspelling of the legitimate Kernel32.dll file (notice the use of 1 instead of l) because of this it is likely malicious and we are able to use this to search for infected systems.


6-> What network-based indicators could be used to find this malware on infected machines?

- Examining the strings contained within Lab01-01.dll more closely reveals that there is what appears to be an IP address. Because of this and the network imports, it is highly likely that this DLL contacts this IP address, and as such we are able to use this to find infected systems which have contacted 127.26.152.13.


7-> What would you guess is the purpose of these files?

- Based on everything I've enumerated above, we would guess that the executable is used to run the DLL which acts as a backdoor or remote access trojan (RAT). Based on the imports it’s possible the executable searches to see if C:\windows\system32\kerne132.dll exists, and if it doesn’t it may attempt to copy the malicious DLL to C:\windows\system32\kerne132.dll which is used for persistence. Upon executing the DLL, it likely contacts a C2 server at 127.26.152.13.